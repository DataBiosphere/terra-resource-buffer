// Build Script Classpath
buildscript {
    ext {
        springBootVersion = '3.5.4'
    }
    dependencies {
        // jib build requires this dependency;
        // see https://github.com/GoogleContainerTools/jib/issues/4235
        classpath group: 'org.apache.commons', name: 'commons-compress', version: '1.28.0'
        classpath group: 'com.fasterxml.jackson', name: 'jackson-bom', version: '2.19.2'
    }
}

plugins {
    id 'idea'
    id 'jacoco'
    id 'java'

    id 'com.diffplug.spotless' version '7.2.1'
    id 'com.github.ben-manes.versions' version '0.52.0'
    id 'com.google.cloud.tools.jib' version '3.4.5'
    id 'de.undercouch.download' version '5.6.0'
    id 'org.hidetake.swagger.generator' version '2.19.2'
    id 'org.sonarqube' version '6.2.0.5505'
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'com.srcclr.gradle' version '3.1.12'
}

sourceCompatibility = JavaVersion.VERSION_17

// If true, search local repository (~/.m2/repository/) first for dependencies.
def useMavenLocal = false

allprojects {
    group = gradle.projectGroup
    version = gradle.rbsVersion
    ext {
        artifactGroup = "${group}.buffer"
        swaggerOutputDir = "${buildDir}/generated"
        resourceDir = "${rootDir}/src/main/resources"
        isCiServer = System.getenv().containsKey("CI")
    }

    apply plugin: 'idea'
    idea {
        module {
            generatedSourceDirs = [file("${swaggerOutputDir}/src/main/java")]
            downloadJavadoc = true
        }
    }
}

repositories {
    if (useMavenLocal) {
        mavenLocal() // must be listed first to take effect
    }
    mavenCentral()
    maven {
        url 'https://us-central1-maven.pkg.dev/dsp-artifact-registry/libs-release/'
    }
    maven {
        url 'https://us-central1-maven.pkg.dev/dsp-artifact-registry/libs-snapshot/'
    }
}

dependencies {
    // Terra deps - we get Stairway via TCL
    implementation group: 'bio.terra', name: 'terra-common-lib', version: '1.1.42-SNAPSHOT'
    implementation (group: 'bio.terra', name: 'terra-cloud-resource-lib', version: '1.2.39-SNAPSHOT') {
        exclude(group: 'com.microsoft.azure')
        exclude(group: 'com.azure')
    }
    implementation group: 'bio.terra', name: 'terra-resource-janitor-client', version: '0.113.50-SNAPSHOT'

    // ====================================================================================================
    // temp for testing versions
    implementation platform('com.google.cloud:libraries-bom:26.65.0')
    implementation 'bio.terra:stairway-gcp:1.1.25-SNAPSHOT'
    // END temp for testing versions
    // ====================================================================================================


    // Versioned direct deps
    implementation group: 'net.javacrumbs.shedlock', name: 'shedlock-spring', version: '6.9.2'
    implementation group: 'net.javacrumbs.shedlock', name: 'shedlock-provider-jdbc-template', version: '6.9.2'
    implementation group: 'com.google.auto.value', name: 'auto-value-annotations', version: '1.11.0'
    implementation group: 'com.google.cloud', name: 'google-cloud-pubsub', version: '1.141.2'
    implementation group: 'com.google.guava', name: 'guava', version: '33.4.8-jre'
    implementation group: 'jakarta.validation', name: 'jakarta.validation-api', version: '3.1.1'
    implementation group: 'org.liquibase', name: 'liquibase-core', version: '4.33.0'
    implementation group: 'org.webjars', name: 'webjars-locator-core', version: '0.59'
    runtimeOnly group: 'org.postgresql', name: 'postgresql'

    // Pull in the opentelemetry sdk because some classes use its objects directly.
    // This otel version should match the same version used by Spring Boot and terra-common-lib.
    var openTelemetrySdkVersion = '1.49.0'
    implementation "io.opentelemetry:opentelemetry-sdk:${openTelemetrySdkVersion}"

    // Deps whose versions are controlled by Spring
    implementation group: 'org.apache.commons', name: 'commons-dbcp2', version: '2.13.0'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.18.0'
    implementation group: 'org.apache.commons', name: 'commons-pool2', version: '2.12.1'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jdbc', version: "${springBootVersion}"
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: "${springBootVersion}"
    implementation group: 'org.springframework.retry', name: 'spring-retry', version: '2.0.12'

    // Swagger deps
    implementation group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: '2.19.2'
    implementation group: 'io.swagger', name: 'swagger-annotations', version: '1.6.16'
    implementation group: 'io.swagger.core.v3', name: 'swagger-annotations', version: '2.2.35'
    runtimeOnly group: 'org.webjars.npm', name: 'swagger-ui-dist', version: '5.27.1'
    swaggerCodegen group: 'io.swagger.codegen.v3', name: 'swagger-codegen-cli', version: '3.0.61'

    // Test deps
    testImplementation 'org.awaitility:awaitility:4.3.0'
    testImplementation("org.springframework.boot:spring-boot-starter-test:${springBootVersion}") {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    annotationProcessor group: 'com.google.auto.value', name: 'auto-value', version: '1.11.0'
    annotationProcessor group: 'org.springframework.boot', name: 'spring-boot-configuration-processor', version: "${springBootVersion}"

    // Transitive dependency constraints due to security vulnurabilities in prior versions.
    // These are not directly included, they are just constrained if they are pulled in as
    // transitive dependencies.
    constraints {
        implementation('org.yaml:snakeyaml:2.4')
        implementation('com.nimbusds:nimbus-jose-jwt:10.4.1')
        implementation('io.projectreactor.netty:reactor-netty-http:1.2.8')
        implementation('com.fasterxml.jackson:jackson-bom:2.19.2')
    }
}

// for scans
if (hasProperty('buildScan')) {
    buildScan {
        termsOfServiceUrl = 'https://gradle.com/terms-of-service'
        termsOfServiceAgree = 'yes'
    }
}

def gradleIncDir= "$rootDir/gradle"
apply from: "$gradleIncDir/jacoco.gradle"
apply from: "$gradleIncDir/javadoc.gradle"
apply from: "$gradleIncDir/jib.gradle"
apply from: "$gradleIncDir/sonarqube.gradle"
apply from: "$gradleIncDir/spotless.gradle"
apply from: "$gradleIncDir/swagger-server.gradle"
apply from: "$gradleIncDir/testing.gradle"
apply from: "$gradleIncDir/srcclr.gradle"

sourceSets.main.java.srcDir "${swaggerOutputDir}/src/main/java"
sourceSets.test.resources.srcDir 'config/' // Allow unit tests to directly load config files.

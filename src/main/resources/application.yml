buffer:
  db:
    password:
    recreate-db-on-start: false
    update-db-on-start: true
    uri: jdbc:postgresql://127.0.0.1:5432/${BUFFER_DATABASE_NAME}
    username:
  primary:
    scheduler-enabled: true
  resource-table-cleanup-job:
    schedule: 0 0 4 * * * # every day at 4 am
    enabled: false
    retention-days: 30
    batch-size: 1000
  pool:
    # The Folder to have all Resource Buffer Service configs.
    # TODO: Investigate where and how to put those files.
    config-path:
    # Whether to update pool when config changes during server startup.
    # Might be useful to avoid potential backward compatibility caused by config change and make tests easier.
    update-pool-on-start: true
    # Alternative system file path to read the config files from. If not set, fall back to reading from config-path. 	    
    system-file-path:
  stairway:
    db:
      password:
      uri: jdbc:postgresql://127.0.0.1:5432/${BUFFER_STAIRWAY_DATABASE_NAME}
      username:
terra:
  common:
    stairway:
      completed-flight-retention: 90d
      force-clean-start: false
      # This decides how soon we can fill a pool. Example: if total pools size is 3000 and each flight takes 10 minutes.
      # having 500 here means it takes 3000 resources / 500 threads * 10minute = 60 minutes to create this pool
      max-parallel-flights: 500
      migrate-upgrade: true
      quiet-down-timeout: 20s
      retention-check-interval: 6h
      terminate-timeout: 5s
      cluster-name-suffix: buffer-stairwaycluster
  tracing:
    sampling-ratio: ${SAMPLING_PROBABILITY:0}
  google:
    monitoring:
      enabled: ${TERRA_COMMON_TRACING_STACKDRIVER_EXPORT_ENABLED:true}
    tracing:
      enabled: ${TRACING_ENABLED:false}
# Turn on debug-level logs for CRL, to include all CRL operation payloads.

logging.level.bio.terra.cloudres: DEBUG

server:
  compression:
    enabled: true
    mime-types: text/css,application/javascript
  port: 8080

spring:
  application:
    name: buffer
  resources:
    cache.cachecontrol:
      max-age: 0
      must-revalidate: true
    static-locations: classpath:/api/

otel:
  sdk:
    disabled: false # set to true to disable all open telemetry features

  springboot:
    resource:
      attributes:
        service:
          name: ${spring.application.name}
